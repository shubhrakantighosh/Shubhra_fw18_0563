Q1) Differentiate between JRE,JVM and JDK?

Answer: The full of the JRE, JVM and JDK are JRE(Java Runtime Environment), JVM(Java Virtual Machine), and JDK(Java Development Kit).

JRE helps us convert that .java file to .class means converting to a byte code. That byte code file can read any operating system like Windows, Mac, Linux, Ubuntu etc.
For Example: In the windows operating system if we convert the file .class menas byte code. and if we share the .class file with any operating like Mac that
 the system can easily readable.

JVM is the virtual machine of java. We can run that file in our operating system by using any Intellij like that kind of software in our command.

JDK is a development kit of java that helps us run the file in our computer system.
For Example Intellij etc.


Q2)
Answer:
public class Main {
    void printMonth(String month){
        if(month == "JAN"){
            System.out.println(" This is the 1st Month of the Year January");
        } else if (month == "FEB") {
            System.out.println(" This is the 2nd Month of the Year February");
        } else if (month == "MAR") {
            System.out.println(" This is the 3rd Month of the Year March");
        } else if (month == "APR") {
            System.out.println(" This is the 4th Month of the Year April");
        } else if (month == "MAY") {
            System.out.println(" This is the 5th Month of the Year May");
        } else if (month == "JUN") {
            System.out.println(" This is the 6th Month of the Year June");
        } else if (month == "JUL") {
            System.out.println(" This is the 7th Month of the Year July");
        } else if (month == "AUG") {
            System.out.println(" This is the 8th Month of the Year August");
        } else if (month == "SEP") {
            System.out.println(" This is the 9th Month of the Year September");
        } else if (month == "OCT") {
            System.out.println(" This is the 10th Month of the Year October");
        } else if (month == "NOV") {
            System.out.println(" This is the 11th Month of the Year November");
        } else if (month == "DEC") {
            System.out.println(" This is the 12th Month of the Year December");
        }
    }
    public static void main(String[] args) {
        String month="DEC";
        Main checkMonth=new Main();
        checkMonth.printMonth(month);
    }
}
 

Q3) Create a class Lion with following members:
Answer:

public class Lion {

    static int count=0;
    static void thinking(boolean isHungry,String lion, int age){
        if(isHungry==false){
            System.out.println(lion+" LionName is sleeping;");
        } else if (isHungry==true & age>12) {
            count++;
            System.out.println(lion+" has killed two animal");
        } else if (isHungry=true & age<=12 & age >=2) {
            count=count+2;
            System.out.println(lion+" has killed one animal");
        } else if (isHungry=true & age<=2) {
            System.out.println(lion+" is calling Mom;");
        }
    }

    public static void main(String[] args) {
        thinking(false, "lion1",21);

        thinking(true, "lion2",69);

        thinking(true, "lion3",14);

        printKillings(count);
    }

    static void printKillings(int totalDeaths){
        System.out.println("Total killings by lions in jungle = "+totalDeaths);
    }
}


Q4) Differentiate between static and non-static variables?

Answer: In java language, static is a reserved keyword. We cant use this keyword for like declaring a variable int static=1; So, what is the use is keyword using 
this keyword can data be stored in ram that is the beauty thing in java. and reaming thigs those function or declare variable its called non-static is this case 
the data store in the hard disk it's not complying in GPU.  But we can the non-static variable in the static variable using some keyword, 1stly we in the static
function we call the main class we have to create an object. Using this  object and with the help of the "new" keyword we can pass the value in that non-static
 function in his parameter and basically that non-static function using the "new" keyword helps to a computer that hard file push to ram now in this way we can
simply di this work from static function to non-static function. 

For Example:

public class Example {

    //non-static function
    void sum(int a){
        System.out.println(a+1);
    }

    //main static function
    public static void main(String[] args) {
        Example sumOfA=new Example();
        sumOfA.sum(4);
    }
}

